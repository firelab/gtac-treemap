summary(lm)$r.squared
)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' ~~ italic(r)^2 ~ '=' ~ %.2g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared
)
eqn_exp <- as.expression(eqn)
eqn_exp
p2 + annotate(geom="text",x = 7.5, y = 5.5, label = eqn_exp, parse = TRUE)
p2 + annotate(geom="text",x = 50, y = 5.5, label = eqn_exp, parse = TRUE)
p2 + annotate(geom="text",x = 25, y = 100, label = eqn_exp, parse = TRUE)
sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' ~~ italic(r)^2 ~ '=' ~ %.2g ','~~ italic(RMSE) ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' ~~ italic(r)^2 ~ '=' ~ %.2g ','~~ italic(RMSE) ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
p2 + annotate(geom="text",x = 25, y = 100, label = eqn_exp, parse = TRUE)
p2 + annotate(geom="text",x = 25, y = 100, label = exp, parse = TRUE)
parse(text = eqn)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' ~~ italic(r)^2 ~ '=' ~ %.2g ',' ~~ italic(RMSE) ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
# https://r-graphics.org/recipe-scatter-fitlines-text
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ italic(RMSE) ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = 25, y = 100, label = exp, parse = TRUE)
print(p3)
p2 + annotate(geom="text",x = 25, y = 100, label = as.expression(exp), parse = TRUE)
p2 + annotate(geom="text",x = 25, y = 100, label = as.character(exp), parse = TRUE)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ italic(RMSE) ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' ~~ italic(r)^2 ~ '=' ~ %.2g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared
)
eqn
p2 + annotate(geom="text",x = 25, y = 100, label = as.character(exp), parse = TRUE)
p2 + annotate(geom="text",x = 25, y = 100, label = exp, parse = TRUE)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' ~~ italic(r)^2 ~ '=' ~ %.2g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared
)
eqn
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' ~~ italic(r)^2 ~ '=' ~ %.2g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared
)
eqn
p2 + annotate(geom="text",x = 25, y = 100, label = eqn, parse = TRUE)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ italic(RMSE) ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
p2 + annotate(geom="text",x = 25, y = 100, label = as.character(eqn), parse = TRUE)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ RMSE ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
p2 + annotate(geom="text",x = 25, y = 100, label = as.character(eqn), parse = TRUE)
p2 + annotate(geom="text",x = 30, y = 100, label = as.character(eqn), parse = TRUE)
i = 5
var_name <- eval_vars_cont[i]
var_name
p_r2 <-
p_r %>%
filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
ungroup() %>%
pivot_wider(names_from = dataset, values_from = value) %>%
arrange(ID)
detach("package:ggpubr", unload = TRUE)
p_r2 <-
p_r %>%
filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
ungroup() %>%
pivot_wider(names_from = dataset, values_from = value) %>%
arrange(ID)
library(tidyverse)
p_r2 <-
p_r %>%
filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
ungroup() %>%
pivot_wider(names_from = dataset, values_from = value) %>%
arrange(ID)
lm <- lm(Imputed ~ Ground_FIA, data = p_r2)
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ RMSE ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = 30, y = 100, label = as.character(eqn), parse = TRUE)
print(p3)
p_r2
range(p_r2$Ground_FIA)
range(p_r2$Ground_FIA, na.rm = TRUE)
5/100
0.05*50
12.5/100
0.125*50
p2 + annotate(geom="text",x = 6.25, y = 100, label = as.character(eqn), parse = TRUE)
0.25*50
max(p_r2$Ground_FIA, na.rm = TRUE)
(0.25*max(p_r2$Ground_FIA, na.rm = TRUE))
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = 100, label = as.character(eqn), parse = TRUE)
print(p3)
i = 3
var_name <- eval_vars_cont[i]
var_name
p_r2 <-
p_r %>%
filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
ungroup() %>%
pivot_wider(names_from = dataset, values_from = value) %>%
arrange(ID)
lm <- lm(Imputed ~ Ground_FIA, data = p_r2)
# lm$coefficients
# lm_sum <- summary(lm)
#
# rmse <- round(sqrt(mean(lm$residuals^2)), 2) # https://www.statology.org/extract-rmse-from-lm-in-r/
# Method 1 (manual using geom_text())
# https://r-graphics.org/recipe-scatter-fitlines-text
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ RMSE ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
# y_var <- paste0("Imputed_", var_name)
#
# x_var <- paste0("Ground_FIA_", var_name)
#
# m <- round(lm_sum$coefficients[2], 2)
#
# b <- round(lm_sum$coefficients[1], 2)
#
# r_sq <- round(lm_sum$r.squared, 2)
#
# eqn_exp <- as.expression(eqn)
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = 100, label = as.character(eqn), parse = TRUE)
print(p3)
0.90*max(p_r2$Imputed, na.rm = TRUE))
(0.90*max(p_r2$Imputed, na.rm = TRUE))
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = (0.90*max(p_r2$Imputed, na.rm = TRUE)), label = as.character(eqn), parse = TRUE)
print(p3)
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = (0.95*max(p_r2$Imputed, na.rm = TRUE)), label = as.character(eqn), parse = TRUE)
print(p3)
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = (0.98*max(p_r2$Imputed, na.rm = TRUE)), label = as.character(eqn), parse = TRUE)
print(p3)
for(i in 1:(length(eval_vars_cont))) {
# for testing
i = 5
var_name <- eval_vars_cont[i]
# Violin plots
#------------------#
# p <- p_r %>%
#   filter(var == var_name) %>%
#   ggplot(aes(x = dataset, y = value, fill = dataset))+
#   geom_violin(position = dodge)+
#   geom_boxplot(width=.1, outlier.colour=NA, position = dodge) +
#   labs(title = glue::glue('Variation in {var_name} by disturbance code, by model')) +
#   xlab(var_name)
#
# print(p)
#
# Scatterplots
#-------------------#
p_r2 <-
p_r %>%
filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
ungroup() %>%
pivot_wider(names_from = dataset, values_from = value) %>%
arrange(ID)
lm <- lm(Imputed ~ Ground_FIA, data = p_r2)
# lm$coefficients
# lm_sum <- summary(lm)
#
# rmse <- round(sqrt(mean(lm$residuals^2)), 2) # https://www.statology.org/extract-rmse-from-lm-in-r/
# Method 1 (manual using geom_text())
# https://r-graphics.org/recipe-scatter-fitlines-text
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ RMSE ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
# y_var <- paste0("Imputed_", var_name)
#
# x_var <- paste0("Ground_FIA_", var_name)
#
# m <- round(lm_sum$coefficients[2], 2)
#
# b <- round(lm_sum$coefficients[1], 2)
#
# r_sq <- round(lm_sum$r.squared, 2)
#
# eqn_exp <- as.expression(eqn)
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = (0.98*max(p_r2$Imputed, na.rm = TRUE)), label = as.character(eqn), parse = TRUE)
print(p3)
# # Method 2 (uses library ggpubr)
# library(ggpubr)
# p2 <- p_r2 %>%
#   ggplot(aes(x = Ground_FIA, y = Imputed)) +
#   geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
#   geom_point(alpha = 0.25) +
#   geom_smooth(method = "lm", formula = y~x) +
#   ggpubr::stat_regline_equation(
#     aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
#     formula = y~x
#   ) +
#   labs() +
#   theme_bw() +
#   ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
#
# print(p2)
# calc r-squared
#lm Reference ~ LCMSDist ; extract r-squared
# for each dataset, and for each disturbance code, and for all disturbance codes together
# # save
# ggsave(glue::glue('{eval_dir}/03_FIA_Comparison/Imputed_vs_ref_{var_name}_violin.png'),
#        plot = p,
#        width = 7,
#        height = 4.5)
# # save
# ggsave(glue::glue('{eval_dir}/03_FIA_Comparison/Imputed_vs_ref_{var_name}_scatter.png'),
#        plot = p2,
#        width = 7,
#        height = 4.5)
}
for(i in 1:(length(eval_vars_cont))) {
# for testing
# i = 5
var_name <- eval_vars_cont[i]
# Violin plots
#------------------#
# p <- p_r %>%
#   filter(var == var_name) %>%
#   ggplot(aes(x = dataset, y = value, fill = dataset))+
#   geom_violin(position = dodge)+
#   geom_boxplot(width=.1, outlier.colour=NA, position = dodge) +
#   labs(title = glue::glue('Variation in {var_name} by disturbance code, by model')) +
#   xlab(var_name)
#
# print(p)
#
# Scatterplots
#-------------------#
p_r2 <-
p_r %>%
filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
ungroup() %>%
pivot_wider(names_from = dataset, values_from = value) %>%
arrange(ID)
lm <- lm(Imputed ~ Ground_FIA, data = p_r2)
# lm$coefficients
# lm_sum <- summary(lm)
#
# rmse <- round(sqrt(mean(lm$residuals^2)), 2) # https://www.statology.org/extract-rmse-from-lm-in-r/
# Method 1 (manual using geom_text())
# https://r-graphics.org/recipe-scatter-fitlines-text
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ RMSE ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2))
)
eqn
parse(text = eqn)
# y_var <- paste0("Imputed_", var_name)
#
# x_var <- paste0("Ground_FIA_", var_name)
#
# m <- round(lm_sum$coefficients[2], 2)
#
# b <- round(lm_sum$coefficients[1], 2)
#
# r_sq <- round(lm_sum$r.squared, 2)
#
# eqn_exp <- as.expression(eqn)
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = (0.98*max(p_r2$Imputed, na.rm = TRUE)), label = as.character(eqn), parse = TRUE)
print(p3)
# # Method 2 (uses library ggpubr)
# library(ggpubr)
# p2 <- p_r2 %>%
#   ggplot(aes(x = Ground_FIA, y = Imputed)) +
#   geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
#   geom_point(alpha = 0.25) +
#   geom_smooth(method = "lm", formula = y~x) +
#   ggpubr::stat_regline_equation(
#     aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
#     formula = y~x
#   ) +
#   labs() +
#   theme_bw() +
#   ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
#
# print(p2)
# calc r-squared
#lm Reference ~ LCMSDist ; extract r-squared
# for each dataset, and for each disturbance code, and for all disturbance codes together
# # save
# ggsave(glue::glue('{eval_dir}/03_FIA_Comparison/Imputed_vs_ref_{var_name}_violin.png'),
#        plot = p,
#        width = 7,
#        height = 4.5)
# # save
# ggsave(glue::glue('{eval_dir}/03_FIA_Comparison/Imputed_vs_ref_{var_name}_scatter.png'),
#        plot = p2,
#        width = 7,
#        height = 4.5)
}
isTRUE(parse(text = eqn))
for(i in 1:(length(eval_vars_cont))) {
# for testing
# i = 5
var_name <- eval_vars_cont[i]
# Violin plots
#------------------#
# p <- p_r %>%
#   filter(var == var_name) %>%
#   ggplot(aes(x = dataset, y = value, fill = dataset))+
#   geom_violin(position = dodge)+
#   geom_boxplot(width=.1, outlier.colour=NA, position = dodge) +
#   labs(title = glue::glue('Variation in {var_name} by disturbance code, by model')) +
#   xlab(var_name)
#
# print(p)
#
# Scatterplots
#-------------------#
p_r2 <-
p_r %>%
filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
ungroup() %>%
pivot_wider(names_from = dataset, values_from = value) %>%
arrange(ID)
# Create linear model
lm <- lm(Imputed ~ Ground_FIA, data = p_r2)
# Method 1 (manual using geom_text())
# https://r-graphics.org/recipe-scatter-fitlines-text
eqn <- sprintf(
"italic(y) == %.3g + %.3g * italic(x) * ',' * ~~ italic(r)^2 ~ '=' ~ %.2g * ',' ~~ RMSE ~ '=' ~  %.3g",
coef(lm)[1],
coef(lm)[2],
summary(lm)$r.squared,
sqrt(mean(lm$residuals^2)) # https://www.statology.org/extract-rmse-from-lm-in-r/
)
eqn
p2 <- p_r2 %>%
ggplot(aes(x = Ground_FIA, y = Imputed)) +
geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
geom_point(alpha = 0.25) +
geom_smooth(method = "lm", formula = y~x) +
labs() +
theme_bw() +
ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
p3 <- p2 + annotate(geom="text",x = (0.25*max(p_r2$Ground_FIA, na.rm = TRUE)), y = (0.98*max(p_r2$Imputed, na.rm = TRUE)), label = as.character(eqn), parse = TRUE)
print(p3)
# # Method 2 (uses library ggpubr)
# library(ggpubr)
# p2 <- p_r2 %>%
#   ggplot(aes(x = Ground_FIA, y = Imputed)) +
#   geom_abline(intercept = 0, color = "red", linewidth = 1, linetype = 2) +
#   geom_point(alpha = 0.25) +
#   geom_smooth(method = "lm", formula = y~x) +
#   ggpubr::stat_regline_equation(
#     aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
#     formula = y~x
#   ) +
#   labs() +
#   theme_bw() +
#   ggtitle(glue::glue("Imputed vs. Ref for {var_name}"))
#
# print(p2)
# calc r-squared
#lm Reference ~ LCMSDist ; extract r-squared
# for each dataset, and for each disturbance code, and for all disturbance codes together
# # save
# ggsave(glue::glue('{eval_dir}/03_FIA_Comparison/Imputed_vs_ref_{var_name}_violin.png'),
#        plot = p,
#        width = 7,
#        height = 4.5)
# # save
# ggsave(glue::glue('{eval_dir}/03_FIA_Comparison/Imputed_vs_ref_{var_name}_scatter.png'),
#        plot = p2,
#        width = 7,
#        height = 4.5)
# save
ggsave(glue::glue('{eval_dir}/03_FIA_Comparison/Imputed_vs_ref_{var_name}_scatter_eqn_rsq_rmse_labels.png'),
plot = p3,
width = 7,
height = 4.5)
}
