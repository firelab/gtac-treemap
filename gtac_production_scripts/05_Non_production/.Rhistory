# filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
group_by(ID, dataset, disturb_code)
distCode_frequencyPlot <- ggplot(data = distCode_frequencyDF, aes(x = disturb_code, fill = dataset)) +
geom_bar(position = position_dodge2(preserve = "single")) +
labs(title = glue::glue('Variation in {var_name}'),
subtitle = "FIA plot (points)") +
xlab(var_name) +
theme_bw()
distCode_frequencyPlot
filterYear <- 2014
distCode_frequencyDF <- p_r %>%
filter(MaxOfINVYR >= filterYear) %>%
# filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
group_by(ID, dataset, disturb_code)
distCode_frequencyPlot <- ggplot(data = distCode_frequencyDF, aes(x = disturb_code, fill = dataset)) +
geom_bar(position = position_dodge2(preserve = "single")) +
labs(title = glue::glue('Variation in {var_name}'),
subtitle = "FIA plot (points)") +
xlab(var_name) +
theme_bw()
distCode_frequencyPlot
ggsave(glue::glue('{export_fig_path}/{r1_name}_vs_{r2_name}_vs_ref_{var_name}_FIAplots-PointEval_actualCount.png'),
plot = distCode_frequencyPlot,
width = 14,
height = 9)
p_r <- data.frame(read.csv(file.path(export_fig_path, "FIA_BufferPlots_LF_LCMS.csv")))
# Initialize the order of factor variables (for plotting)
p_r$disturb_code <- factor(p_r$disturb_code, levels = c("None", "Fire", "Slow Loss"))
p_r$dataset <- factor(p_r$dataset, levels = c("Reference", "LFOrig", "LCMSDist"))
barplot_legendCols <- c("Reference" = "#00BA38",
"LFOrig" = "#F8766D",
"LCMSDist" = "#619CFF")
# Select year to filter with (inclusive)
filterYear <- 2016
# Select year to filter with (inclusive)
filterYear <- 2014
distCode_frequencyDF <- p_r %>%
filter(MaxOfINVYR >= filterYear) %>%
# filter(var == var_name) %>%
select(-c(var, PLOTID, CN_plot)) %>%
group_by(ID, dataset, disturb_code)
distCode_frequencyPlot <- ggplot(data = distCode_frequencyDF, aes(x = disturb_code, fill = dataset)) +
geom_bar(position = position_dodge2(preserve = "single")) +
labs(title = glue::glue('Variation in {var_name}'),
subtitle = "FIA buffer plot (40 m)") +
xlab(var_name) +
theme_bw()
distCode_frequencyPlot
ggsave(glue::glue('{export_fig_path}/FIABufferPlotEval/cell_centriod_withinBuffer/Barplots_categorical_vars/{r1_name}_vs_{r2_name}_vs_ref_{var_name}_FIABufferPlotEval_actualCount.png'),
plot = distCode_frequencyPlot,
width = 14,
height = 9)
home_dir <- "//166.2.126.25/TreeMap"
treemapLib_path <- glue::glue("{home_dir}/02_GitHub/gtac-treemap/gtac_production_scripts/00_Library/treemapLib.R")
source(treemapLib_path)
projectsDir <- "03_Outputs/99_Projects"
zone_num <- 16
zone_name <- glue::glue("z{zone_num}")
evalDir <- glue::glue("03_Evaluation/{zone_name}/02_Target_Layer_Comparison")
tempDir <- "C:/Users/abhinavshrestha/OneDrive - USDA/Documents/02_TreeMap/temp_dir"
project_name <- "2016_GTAC_Test"
# project_name <- "2016_GTAC_LCMSDist"
assembled_dir <- glue::glue('{home_dir}/{projectsDir}/{project_name}/02_Assembled_model_outputs/{zone_name}')
# set path to landfire vector data
lf_zones_path <- glue::glue("{home_dir}/01_Data/02_Landfire/LF_zones/Landfire_zones/refreshGeoAreas_041210.shp")
if (project_name == "2016_GTAC_Test"){
# name of raster to validate
raster_name <- glue::glue("2016_Orig_Test_keepinbag_ntree250_tilesz2000_nT36")
datasetName <- "LFOrig"
RDS_name <- "2016_Orig_Test_keepinbag_ntree250_CMs_TargetLayerComparison.RDS"
RDS_path <- glue::glue("{home_dir}/{projectsDir}/{project_name}/{evalDir}/{RDS_name}")
cms_all <- readRDS(RDS_path)
print(paste0("Imported .rds file from: ", RDS_path))
} else if (project_name == "2016_GTAC_LCMSDist") {
# name of raster to validate
raster_name <- glue::glue("2016_GTAC_LCMSDist_tilesz2000_nT36")
datasetName <- "LCMSDist"
RDS_name <- "2016_GTAC_LCMSDist_CMs_TargetLayerComparison.RDS"
RDS_path <- glue::glue("{home_dir}/{projectsDir}/{project_name}/{evalDir}/{RDS_name}")
cms_all <- readRDS(RDS_path)
print(paste0("Imported .rds file from: ", RDS_path))
}
# load LF zone data
LF_zones <- terra::vect(lf_zones_path)
# select single LF zone
zone <- subset(LF_zones, LF_zones$ZONE_NUM == zone_num)
#project
zone <- terra::project(zone, crs(ras))
install.packages("data.table")
library(data.table)
startTime <- Sys.time()
home_dir <- "//166.2.126.25/TreeMap"
#################################################################
# Load required packages
#################################################################
# packages required
list.of.packages <- c("this.path", "terra", "tidyverse", "magrittr",
"glue", "tictoc", "caret", "yaImpute", "randomForest", "this.path")
#check for packages and install if needed
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages) > 0) install.packages(new.packages)
# load all packages
vapply(list.of.packages, library, logical(1L),
character.only = TRUE, logical.return = TRUE)
projectsDir <- "03_Outputs/07_Projects"
zone_num <- 16
zone_name <- glue::glue("z{zone_num}")
evalDir <- glue::glue("03_Evaluation/{zone_name}/02_Target_Layer_Comparison")
tempDir <- "C:/Users/abhinavshrestha/OneDrive - USDA/Documents/02_TreeMap/temp_dir"
project_name <- "2016_GTAC_Test"
# project_name <- "2016_GTAC_LCMSDist"
assembled_dir <- glue::glue('{home_dir}/{projectsDir}/{project_name}/02_Assembled_model_outputs/{zone_name}')
# Variables to compare
# - Target and impute vars 1:4 are compared among datasets with each other with the reference (5 bar plots) -- as both target and imputed variables are present.
# - Impute vars 5:11 are compared among the datasets with reference (3 bar plots).
target_vars <- c("canopy_cover", "canopy_height", "EVT_GP", "disturb_code")
impute_vars <- c("canopy_cover", "canopy_height", "EVT_GP", "disturb_code", "CANOPYPCT", "CARBON_D", "GSSTK", "QMD_RMRS", "SDIPCT_RMRS", "TPA_DEAD", "TPA_LIVE")
i = 8
# Data not present as target layers (imputed only)
ImpVar <- impute_vars[i]
# Load imputed rasters
LFOrig_imputed <- terra::rast(glue::glue("//166.2.126.25/TreeMap/03_Outputs/07_Projects/2016_GTAC_Test/02_Assembled_model_outputs/z16/02_Assembled_vars/2016_Orig_Test_keepinbag_ntree250_tilesz2000_nT36_{ImpVar}.tif"))
LCMSDist_imputed<- terra::rast(glue::glue("//166.2.126.25/TreeMap/03_Outputs/07_Projects/2016_GTAC_LCMSDist/02_Assembled_model_outputs/z16/02_Assembled_vars/2016_GTAC_LCMSDist_tilesz2000_nT36_{ImpVar}.tif"))
if (!exists(x = "rat")){
# Path to X table
xtable_path <- glue::glue("{home_dir}/03_Outputs/06_Reference_Data/v2016_RMRS/X_table_all_singlecondition.txt") # ALL ref
X_df <- data.frame(read.csv(xtable_path)) %>%
rename(PLOTID = ID)
# set location of raster attribute table
rat_path <- glue::glue("{home_dir}/01_Data/01_TreeMap2016_RDA/RDS-2021-0074_Data/Data/")
rat <- terra::rast(glue::glue('{rat_path}TreeMap2016.tif'))
rat <- data.frame(terra::cats(rat))
rat %<>%
rename("SDIPCT_RMRS" = SDIPCT_RMR,
"CARBON_DOWN_DEAD" = CARBON_DWN) %>%
mutate(CN = as.numeric(CN)) %>%
select(-Value)
# prep reference values - from "X_df" joined with RAT (ONLY X_df rows used to build model, and present in z16 are used)
refs <- X_df %>%
left_join(rat, by = c("CN" = "CN")) %>%
select(c(CN, PLOTID, any_of(impute_vars))) %>%
drop_na()
}
# Subset to just var of interest column
X_df_subset <- data.frame(refs[, ImpVar])
names(X_df_subset) <- ImpVar
X_df_subset$dataset <- "FIA"
# Convert rasters to DF and compute frequency tables
# Raster to df
LFOrig_imputed_df <- data.frame(LFOrig_imputed)
names(LFOrig_imputed_df) <- ImpVar
LFOrig_imputed_df$dataset <- "imputed_LF"
# Raster to df
LCMSDist_imputed_df <- data.frame(LCMSDist_imputed)
names(LCMSDist_imputed_df) <- ImpVar
LCMSDist_imputed_df$dataset <- "imputed_LCMS"
# remove rasters (free up memory)
rm(LFOrig_imputed)
rm(LCMSDist_imputed)
gc()
t <- Sys.time()
merge_df <- rbind(X_df_subset, LFOrig_imputed_df, LCMSDist_imputed_df)
# Change all -99 values to 0 (for continuous variables)
merge_df[[ImpVar]][merge_df[[ImpVar]] == -99] <- 0
merge_df$dataset <- factor(merge_df$dataset, levels = c("FIA", "imputed_LF", "target_LF", "imputed_LCMS", "target_LCMS"))
Sys.time() - t
ggplot(data = merge_df, aes(x = .data[[ImpVar]], fill = dataset))+
geom_histogram(aes(y = after_stat(density)), position = position_dodge2(preserve = "single")) +
scale_fill_manual(name = "Dataset",
labels = c("FIA (Ground)", "LFOrig (Imputed)", "LCMSDist (Imputed)"),
values = c("springgreen4", "darkgoldenrod1", "cyan")) +
labs(title = glue::glue("Frequency of {ImpVar} in dataset (normalized)"),
x = ImpVar,
y = "Normalized count") +
# scale_x_continuous(breaks = unique(merge_df[[ImpVar]])) +
# scale_x_discrete(labels = c("None", "Fire", "Slow Loss")) +
theme_bw()
X_dt_subset <- data.table::data.table(X_df_subset)
X_dt_subset <- data.table::data.table(X_df_subset)
LFOrig_imputed_dt <- data.table::data.table(LFOrig_imputed_df)
LCMSDist_imputed_dt <- data.table::data.table(LCMSDist_imputed_df)
t <- Sys.time()
merge_dt <- rbind(X_dt_subset, LFOrig_imputed_dt, LCMSDist_imputed_dt)
# Change all -99 values to 0 (for continuous variables)
merge_dt[[ImpVar]][merge_df[[ImpVar]] == -99] <- 0
merge_dt$dataset <- factor(merge_dt$dataset, levels = c("FIA", "imputed_LF", "target_LF", "imputed_LCMS", "target_LCMS"))
Sys.time() - t
t <- Sys.time()
ggplot(data = merge_df, aes(x = .data[[ImpVar]], fill = dataset))+
geom_histogram(aes(y = after_stat(density)), position = position_dodge2(preserve = "single")) +
scale_fill_manual(name = "Dataset",
labels = c("FIA (Ground)", "LFOrig (Imputed)", "LCMSDist (Imputed)"),
values = c("springgreen4", "darkgoldenrod1", "cyan")) +
labs(title = glue::glue("Frequency of {ImpVar} in dataset (normalized)"),
x = ImpVar,
y = "Normalized count") +
# scale_
Sys.time() - t
t <- Sys.time()
ggplot(data = merge_df, aes(x = .data[[ImpVar]], fill = dataset))+
geom_histogram(aes(y = after_stat(density)), position = position_dodge2(preserve = "single")) +
scale_fill_manual(name = "Dataset",
labels = c("FIA (Ground)", "LFOrig (Imputed)", "LCMSDist (Imputed)"),
values = c("springgreen4", "darkgoldenrod1", "cyan")) +
labs(title = glue::glue("Frequency of {ImpVar} in dataset (normalized)"),
x = ImpVar,
y = "Normalized count") +
# scale_x_continuous(breaks = unique(merge_df[[ImpVar]])) +
# scale_x_discrete(labels = c("None", "Fire", "Slow Loss")) +
theme_bw()
Sys.time() - t
t <- Sys.time()
ggplot(data = merge_dt, aes(x = .data[[ImpVar]], fill = dataset))+
geom_histogram(aes(y = after_stat(density)), position = position_dodge2(preserve = "single")) +
scale_fill_manual(name = "Dataset",
labels = c("FIA (Ground)", "LFOrig (Imputed)", "LCMSDist (Imputed)"),
values = c("springgreen4", "darkgoldenrod1", "cyan")) +
labs(title = glue::glue("Frequency of {ImpVar} in dataset (normalized)"),
x = ImpVar,
y = "Normalized count") +
# scale_x_continuous(breaks = unique(merge_df[[ImpVar]])) +
# scale_x_discrete(labels = c("None", "Fire", "Slow Loss")) +
theme_bw()
Sys.time() - t
sort(unique(X_df_subset$QMD_RMRS))
sort(unique(X_dt_subset$QMD_RMRS))
# Change all -99 values to 0 (for continuous variables)
merge_dt[[ImpVar]][merge_dt[[ImpVar]] == -99] <- 0
t <- Sys.time()
ggplot(data = merge_dt, aes(x = .data[[ImpVar]], fill = dataset))+
geom_histogram(aes(y = after_stat(density)), position = position_dodge2(preserve = "single")) +
scale_fill_manual(name = "Dataset",
labels = c("FIA (Ground)", "LFOrig (Imputed)", "LCMSDist (Imputed)"),
values = c("springgreen4", "darkgoldenrod1", "cyan")) +
labs(title = glue::glue("Frequency of {ImpVar} in dataset (normalized)"),
x = ImpVar,
y = "Normalized count") +
# scale_x_continuous(breaks = unique(merge_df[[ImpVar]])) +
# scale_x_discrete(labels = c("None", "Fire", "Slow Loss")) +
theme_bw()
Sys.time() - t
xtable_path <- glue::glue("{home_dir}/03_Outputs/07_Projects/2016_GTAC_Test/01_Raw_model_outputs/z16/xytables/z16_2016_GTAC_Test_GTACTarget_Data_Xdf_bin.csv")
X_df <- data.frame(read.csv(xtable_path))
head(X_df)
head(X_df, n = 6)
head(X_df, n = 2)
head(rat, n = 2)
xtable_path <- glue::glue("{home_dir}/03_Outputs/06_Reference_Data/v2016_RMRS/X_table_all_singlecondition.txt") # ALL ref
X_df <- data.frame(read.csv(xtable_path)) %>%
rename(PLOTID = ID)
head(X_df, n = 2)
# X-df used to build model for z16
xtable_path <- glue::glue("{home_dir}/03_Outputs/07_Projects/2016_GTAC_Test/01_Raw_model_outputs/z16/xytables/z16_2016_GTAC_Test_GTACTarget_Data_Xdf_bin.csv")
X_df <- data.frame(read.csv(xtable_path))
xtableALL_path <- glue::glue("{home_dir}/03_Outputs/06_Reference_Data/v2016_RMRS/X_table_all_singlecondition.txt") # ALL ref
data.frame(read.csv(xtableALL_path)) %>%
rename(PLOTID = ID) %>%
select(c(ID, CN))
data.frame(read.csv(xtableALL_path)) %>%
rename(PLOTID = ID) %>%
select(c(PLOTID, CN))
X_df_ALL_ID_CN <- data.frame(read.csv(xtableALL_path)) %>%
rename(PLOTID = ID) %>%
select(c(PLOTID, CN))
X_df %>% left_join(X_df_ALL_ID_CN, by("PLOTID" = "X"))
left_join(X_df, X_df_ALL_ID_CN, by("PLOTID" = "X"))
X_df %>%
left_join(rat, by = c("CN" = "CN"))
X_df_ALL_ID_CN
X_df
left_join(X_df, X_df_ALL_ID_CN, by("X"= "PLOTID"))
testdf <- left_join(X_df, X_df_ALL_ID_CN, by("X"= "PLOTID"))
?left_join
X_df %>%
left_join(X_df_ALL_ID_CN, by("X"= "PLOTID"))
X_df %>%
left_join(X_df_ALL_ID_CN, by = c("PLOTID" = "X"))
X_df %>%
left_join(X_df_ALL_ID_CN, by = c("X" = "PLOTID"))
testdf <- X_df %>%
left_join(X_df_ALL_ID_CN, by = c("X" = "PLOTID"))
X_df <- X_df %>%
left_join(X_df_ALL_ID_CN, by = c("X" = "PLOTID"))
refs <- X_df %>%
left_join(rat, by = c("CN" = "CN")) %>%
select(c(CN, PLOTID, any_of(impute_vars))) %>%
drop_na()
X_df %>%
left_join(rat, by = c("CN" = "CN"))
# X-df used to build model for z16
xtable_path <- glue::glue("{home_dir}/03_Outputs/07_Projects/2016_GTAC_Test/01_Raw_model_outputs/z16/xytables/z16_2016_GTAC_Test_GTACTarget_Data_Xdf_bin.csv")
X_df <- data.frame(read.csv(xtable_path))
X_df %>%
left_join(X_df_ALL_ID_CN, by = c("X" = "PLOTID")) %>%
rename(PLOTID = X)
X_df <- X_df %>%
left_join(X_df_ALL_ID_CN, by = c("X" = "PLOTID")) %>%
rename(PLOTID = X)
refs <- X_df %>%
left_join(rat, by = c("CN" = "CN")) %>%
select(c(CN, PLOTID, any_of(impute_vars))) %>%
drop_na()
# Subset to just var of interest column
X_df_subset <- data.frame(refs[, ImpVar])
names(X_df_subset) <- ImpVar
X_df_subset$dataset <- "FIA"
merge_df <- rbind(X_df_subset, LFOrig_imputed_df, LCMSDist_imputed_df)
# Change all -99 values to 0 (for continuous variables)
merge_df[[ImpVar]][merge_df[[ImpVar]] == -99] <- 0
merge_df$dataset <- factor(merge_df$dataset, levels = c("FIA", "imputed_LF", "target_LF", "imputed_LCMS", "target_LCMS"))
ggplot(data = merge_df, aes(x = .data[[ImpVar]], fill = dataset))+
geom_histogram(aes(y = after_stat(density)), position = position_dodge2(preserve = "single")) +
scale_fill_manual(name = "Dataset",
labels = c("FIA (Ground)", "LFOrig (Imputed)", "LCMSDist (Imputed)"),
values = c("springgreen4", "darkgoldenrod1", "cyan")) +
labs(title = glue::glue("Frequency of {ImpVar} in dataset (normalized)"),
x = ImpVar,
y = "Normalized count") +
# scale_x_continuous(breaks = unique(merge_df[[ImpVar]])) +
# scale_x_discrete(labels = c("None", "Fire", "Slow Loss")) +
theme_bw()
# Written by Lila Leatherman (lila.leatherman@usda.gov)
# Objective: Compare output rasters - extract values to 40 m buffered FIA plots (polygons)
# Last update: 04/24/24 (by Abhinav Shrestha; abhinav.shrestha@usda.gov)
########################################################
# Setup
########################################################
# home_dir
home_dir <- "//166.2.126.25/TreeMap/"
# path to first raster to compare
r1_path <- glue::glue("{home_dir}/03_Outputs/07_Projects/2016_GTAC_Test/02_Assembled_model_outputs/z16/01_Imputation/2016_Orig_Test_keepinbag_ntree250_tilesz2000_nT36.tif")
r1_name <- "LFOrig"
# path to second raster to compare
r2_path <- glue::glue("{home_dir}/03_Outputs/07_Projects/2016_GTAC_LCMSDist/02_Assembled_model_outputs/z16/01_Imputation/2016_GTAC_LCMSDist_tilesz2000_nT36.tif")
r2_name <- "LCMSDist"
# path to save output figures
# export_fig_path <- glue::glue("{home_dir}03_Outputs/99_Projects/2016_GTAC_LCMSDist/03_Evaluation/z16/04_Model_Comparison/")
export_fig_path <- glue::glue("C:/Users/abhinavshrestha/OneDrive - USDA/Documents/02_TreeMap/temp_dir/")
# list variables to evaluate
eval_vars_cat <- c("canopy_cover", "canopy_height", "EVT_GP",
"disturb_year", "disturb_code")
eval_vars_cont <- c("GSSTK", "QMD_RMRS", "SDIPCT_RMRS",
"CANOPYPCT", "CARBON_L", "CARBON_D",
"CARBON_DOWN_DEAD", "DRYBIO_L", "DRYBIO_D",
"TPA_DEAD", "TPA_LIVE", "BALIVE")
# path to shapefile or coords of points
pts_path <- glue::glue("{home_dir}/01_Data/04_FIA/03_FullShp/FIA_US.shp")
# path to xtable or similar
xtable_path <- glue::glue("{home_dir}/03_Outputs/06_Reference_Data/v2016_RMRS/X_table_all_singlecondition.txt")
# set location of raster attribute table
rat_path <- glue::glue("{home_dir}01_Data/01_TreeMap2016_RDA/RDS-2021-0074_Data/Data/")
# path to evt_gp metadata
evt_path <- glue::glue("{home_dir}01_Data/02_Landfire/LF_200/EVT/LF2016_EVT_200_CONUS/CSV_Data/LF16_EVT_200.csv")
# path to coords
coords_path <- glue::glue("{home_dir}01_Data/04_FIA/06_Coordinates/select_TREEMAP2022_2send/select_TREEMAP2022_2send.csv")
# crs raster data are in
landfire_crs <- terra::crs(glue::glue('{home_dir}/01_Data/02_Landfire/landfire_crs.prj'))
# libraries
#--------------------------------------------------------#
# install dev version
#remotes::install_github("corybrunson/ggalluvial@main", build_vignettes = TRUE)
library(ggalluvial)
# load libraries
library(terra)
library(tidyverse)
library(magrittr)
library(ggplot2)
library(modeest)
# Other options
# --------------------------------#
# Allow for sufficient digits to differentiate plot cn numbers
options("scipen"=100, "digits"=8)
#########################################################
# Run
#########################################################
# Load data
#----------------------------------------------#
# load raster 1 for comparison
r1 <- terra::rast(r1_path)
names(r1) <- "PLOTID"
# load raster 2 for comparison
r2 <- terra::rast(r2_path)
names(r2) <- "PLOTID"
# load shp / pts to extract to
# pts <- terra::vect(pts_path)
# load x.df
X.df <- read.csv(xtable_path) %>%
rename(PLOTID = ID)
# load evt dat
evt_dat <- read.csv(evt_path)
# load coords
coords <- read.csv(coords_path)
# Load raster attribute table
#-------------------------------------------------#
rat <- terra::rast(glue::glue('{rat_path}TreeMap2016.tif'))
rat <- data.frame(cats(rat))
rat %<>%
rename("SDIPCT_RMRS" = SDIPCT_RMR,
"CARBON_DOWN_DEAD" = CARBON_DWN) %>%
mutate(CN = as.numeric(CN)) %>%
select(-Value)
#names(rat)
# prep evt data
#------------------------------------------------------#
evt_dat %<>%
select(EVT_GP, EVT_GP_N, RED, GREEN, BLUE) %>%
filter(!is.na(EVT_GP)) %>%
distinct() %>%
group_by(EVT_GP) %>%
slice_head()
# Prep pts
#----------------------------------#
# OLD CODE -- NOT NEEDED (?)
# project pts
# pts %<>% terra::project(r1)
#
# # convert to data frame
# pts_df <- data.frame(pts)
# Prep coords data
#----------------------------------------------------------------#
coords %<>%
filter(PLT_CN %in% rat$CN) # limit to CNs with reference values in RAT
# separate out into data frame
coords_df <- coords
# convert coords to spatial
coords <- terra::vect(coords, geom = c("ACTUAL_LON", "ACTUAL_LAT"), crs = "epsg:4269")
coords_subset <- coords[5500]
# Set buffer width
buffer_width <- 40
# convert FIA points to polygon with <buffer width> radius
coords_buffer <- terra::buffer(coords, width = buffer_width)
# Store attributes of FIA plots (polygons) in a data frame for joining later
coords_buffer_df <- data.frame(coords_buffer)
## For testing
# coords_bufferSubset <- coords_buffer[5799]
# coords_bufferSubset_df <- data.frame(coords_bufferSubset)
# Prep data to plot
#----------------------------------------------------------#
# Data Dictionary for extracts / Outputs:
# ID: row number of FIA point in original coords
# PLOTID: imputed treemap plot id
# CN_pt : CN of FIA point in original coords
# CN_plot: CN of plot imputed to fia point
# extract  values to points - imputed plot ID at original FIA point
# -----------------------------------------------#
# Extract r1 values of cell centers (default setting) that fall in polygon to data.frame
# - `ID = TRUE` parameter ensures the index of the polygon (coords_buffer) is added to the data.frame (used to join later)
# - `touches = TRUE` parameter enables extraction from any raster cells that touch the polygon (the boundary of fall within)
r1_ex_buffer <- terra::extract(r1, coords_bufferSubset, ID = TRUE, touches = TRUE)
r1_ex_buffer <- terra::extract(r1, coords_buffer, ID = TRUE)
# Add a new attribute `CN_pt` to the extract raster
r1_ex_buffer$CN_pt <- NA
for (i in 1:nrow(r1_ex_buffer)){
if (!is.na(r1_ex_buffer$PLOTID[i])) {
# Add CN_pt of FIA plot from coords_buffer_df to extract data.frame using polygon Index (`ID`)
r1_ex_buffer$CN_pt[i] <- coords_buffer_df$PLT_CN[r1_ex_buffer$ID[i]]
}
}
r1_ex_buffer <- r1_ex_buffer %>%
filter(!is.na(PLOTID)) # remove NAs
# Extract raster cell values over polygon
r2_ex_buffer <- terra::extract(r2, coords_buffer, ID = TRUE)
# Add a new attribute `CN_pt` to the extract raster
r2_ex_buffer$CN_pt <- NA
for (i in 1:nrow(r2_ex_buffer)){
if (!is.na(r2_ex_buffer$PLOTID[i])) {
# Join with CN_pt of FIA plot data frame to raster cells using polygon Index (`ID`)
r2_ex_buffer$CN_pt[i] <- coords_buffer_df$PLT_CN[r2_ex_buffer$ID[i]]
}
}
r2_ex_buffer <- r2_ex_buffer %>%
filter(!is.na(PLOTID)) # remove NAs
# join extracts with x table and RAT - join ri_ex$PLOTID to RAT$tm_id
# to get values of the imputed plot
r1_ex_buffer %<>% left_join(X.df,
by = c("PLOTID" = "PLOTID")) %>%
left_join(rat, by = c("CN" = "CN", "PLOTID" = "tm_id")) %>%
rename(CN_plot = "CN") %>%
select(c(ID, CN_pt, CN_plot, PLOTID, any_of(c(eval_vars_cat, eval_vars_cont)))) %>%
mutate(dataset = r1_name) # add name of source dataset in the `dataset` column
r2_ex_buffer %<>% left_join(X.df,
by = c("PLOTID" = "PLOTID")) %>%
left_join(rat, by = c("CN" = "CN", "PLOTID" = "tm_id")) %>%
rename(CN_plot = "CN") %>%
select(c(ID, CN_pt, CN_plot, PLOTID, any_of(c(eval_vars_cat, eval_vars_cont)))) %>%
mutate(dataset = r2_name) # add name of source dataset in the `dataset` column
# prep reference values - from "X.df / reference table"
refs_buffer <-
r1_ex_buffer %>%
select(ID, CN_pt) %>%
left_join(X.df, by = c("CN_pt" = "CN")) %>%
left_join(rat, by = c("CN_pt" = "CN")) %>%
mutate(CN_plot = as.numeric(NA)) %>%
mutate(PLOTID = as.numeric(NA)) %>%
select(c(ID, CN_pt, CN_plot, PLOTID, any_of(c(eval_vars_cat, eval_vars_cont)))) %>%
mutate(dataset = "Reference")
# join
p_r_buffer <- bind_rows(r1_ex_buffer, r2_ex_buffer, refs_buffer) %>%
# pivot longer
pivot_longer(!c(ID, CN_pt, CN_plot, PLOTID, dataset, disturb_code), names_to = "var", values_to = "value") %>%
mutate(var = factor(var),
# value = na_if(value, -99.00000), # update NA values from RAT
disturb_code = factor(disturb_code,
labels = c("None", "Fire", "Slow Loss"))) %>%
group_by(disturb_code) %>%
left_join(coords_df %>% select(PLT_CN, MaxOfINVYR), by = c("CN_pt" = "PLT_CN"))
# save as .csv
write.csv(p_r_buffer, file.path(export_fig_path, "FIA_BufferPlots_LF_LCMS_2_noNA.csv"), row.names = FALSE)
# load saved buffer plot csv
p_r <- data.frame(read.csv(file.path(export_fig_path, "FIA_BufferPlots_LF_LCMS_2_noNA.csv")))
